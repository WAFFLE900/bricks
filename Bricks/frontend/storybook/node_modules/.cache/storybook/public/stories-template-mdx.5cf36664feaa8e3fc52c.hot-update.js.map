{"version":3,"file":"stories-template-mdx.5cf36664feaa8e3fc52c.hot-update.js","mappings":";;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sources":["webpack://storybook/./src/stories/template.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\n/*DocumentationTemplate.mdx*/\n/*\n* ðŸ‘‡ The isTemplate property is required to tell Storybook that this is a template\n* See https://storybook.js.org/docs/react/api/doc-block-meta\n* to learn how to use\n*/\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Meta, Title, Subtitle, Description, Primary, Controls, Stories} from '@storybook/blocks';\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      h1: \"h1\",\n      h2: \"h2\",\n      p: \"p\",\n      hr: \"hr\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [\"\\n\", \"\\n\", \"\\n\", _jsx(Meta, {\n        isTemplate: true\n      }), \"\\n\", _jsx(Title, {}), \"\\n\", _jsx(_components.h1, {\n        id: \"default-implementation\",\n        children: \"Default implementation\"\n      }), \"\\n\", _jsx(Primary, {}), \"\\n\", _jsx(_components.h2, {\n        id: \"inputs\",\n        children: \"Inputs\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"The component accepts the following inputs (props):\"\n      }), \"\\n\", _jsx(Controls, {}), \"\\n\", _jsx(_components.hr, {}), \"\\n\", _jsx(_components.h2, {\n        id: \"additional-variations\",\n        children: \"Additional variations\"\n      }), \"\\n\", _jsx(_components.p, {\n        children: \"Listed below are additional variations of the component.\"\n      }), \"\\n\", _jsx(Stories, {})]\n    });\n  }\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}