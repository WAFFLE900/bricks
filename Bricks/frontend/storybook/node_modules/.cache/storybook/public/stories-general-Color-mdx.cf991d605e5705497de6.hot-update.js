"use strict";
self["webpackHotUpdatestorybook"]("stories-general-Color-mdx",{

/***/ "./src/stories/general/Color.mdx":
/*!***************************************!*\
  !*** ./src/stories/general/Color.mdx ***!
  \***************************************/
/***/ (function(__unused_webpack_module, __webpack_exports__, __webpack_require__) {

__webpack_require__.r(__webpack_exports__);
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ "./node_modules/react/index.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);
/* harmony import */ var react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react/jsx-runtime */ "./node_modules/react/jsx-runtime.js");
/* harmony import */ var _storybook_addon_essentials_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! @storybook/addon-essentials/docs/mdx-react-shim */ "./node_modules/@mdx-js/react/lib/index.js");
/* harmony import */ var _storybook_blocks__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @storybook/blocks */ "./node_modules/@storybook/blocks/dist/index.mjs");
/* harmony import */ var _components_Color_json__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../components/Color.json */ "./src/components/Color.json");



/*@jsxRuntime automatic @jsxImportSource react*/
/*src/stories/general/Color.mdx*/
// Repeat generatnig a block for each color in the reds array
// compute the greyscale value of Color[name]
// if the greyscale value is less than 150, use white text, otherwise use black text
// Generate a block with a square with background: Color[name], and text: name
// Repeat generatnig a block for each color in the grey_scale array
// compute the greyscale value of Color[name]
// if the greyscale value is less than 150, use white text, otherwise use black text
// Generate a block with a square with background: Color[name], and text: name
// Copy the code to clipboard when the block is clicked
// Alert when the copy is get failed




function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = Object.assign({}, (0,_storybook_addon_essentials_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_3__.useMDXComponents)(), props.components);
  return MDXLayout ? (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(MDXLayout, Object.assign({}, props, {
    children: (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_createMdxContent, {})
  })) : _createMdxContent();
  function _createMdxContent() {
    const _components = Object.assign({
      h1: "h1",
      p: "p",
      code: "code",
      br: "br",
      div: "div",
      span: "span",
      strong: "strong"
    }, (0,_storybook_addon_essentials_docs_mdx_react_shim__WEBPACK_IMPORTED_MODULE_3__.useMDXComponents)(), props.components);
    return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.Fragment, {
      children: ["\n", "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_storybook_blocks__WEBPACK_IMPORTED_MODULE_4__.Meta, {
        title: "General 通用/Colors 色彩"
      }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("style", {
        children: `
  .tip {
      display: inline-block;
      border-radius: 1em;
      font-size: 11px;
      line-height: 12px;
      font-weight: 700;
      background: ${_components_Color_json__WEBPACK_IMPORTED_MODULE_2__["bricks red"]};
      color: #FFF;
      padding: 4px 12px;
      margin-right: 10px;
      vertical-align: middle;
  }

  .subheading {
    --mediumdark: '#999999';
    font-weight: 700;
    font-size: 15px;
    color: #999;
    letter-spacing: 6px;
    line-height: 24px;
    text-transform: capitalize;
    margin-bottom: 12px;
    margin-top: 40px;
  }

  .my-list {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(205px, 1fr));
    grid-template-rows: 1fr 1fr;
    row-gap: 15px;
    column-gap: 15px;
  }

  @media all and (-ms-high-contrast:none) {
  .my-list {
      display: -ms-grid;
      -ms-grid-columns: 1fr 1fr;
      -ms-grid-rows: 1fr 1fr;
    }
  }

  .my-item {
    display: block;
    padding: 20px;
    border: 1px solid #00000010;
    border-radius: 5px;
    transition: background 0.8s, border 150ms ease-out, transform 150ms ease-out;
    background: #ffffff;
    display: flex;
    align-items: flex-start;
  }

  .my-item:hover {
    border-color: 2px solid ${_components_Color_json__WEBPACK_IMPORTED_MODULE_2__["bricks red"]};
    transform: translate3d(0, -3px, 0);
    box-shadow: rgba(0, 0, 0, 0.08) 0 3px 10px 0;
  }

  .my-item:active {
    transform: translate3d(0, 0, 0);
  }

  .my-item strong {
    font-weight: 700;
    display: block;
    margin-bottom: 2px;
  }

  .my-item span,
  .my-item p {
    margin: 0;
    font-size: 14px;
    line-height: 20px;
  }

  .my-item .color-box {
    width: 40px;
    height: 40px;
    border-radius: 5px;
    margin: 0 10px 0 0;
  }
  .my-item:hover .color-box {
    transition: width 0.2s;
    color: #00000000;
    width: 0;
    height: 40px;
    border-radius: 5px;
    margin: 0;
  }
  .my-item:hover .darkonhover {
    color: #CCC;
  }
  .my-item:hover :not(.darkonhover) {
    color: #555;
  }
  `
      }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.h1, {
        id: "colors-色彩",
        children: "Colors 色彩"
      }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {
        children: ["在你的 ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
          children: ".js"
        }), " 檔案中，你可以引入 ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
          children: "import Color from '../../components/Color.json';"
        }), " ，並透過 ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
          children: "Color['colorname']"
        }), " 來使用這些顏色。", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.br, {}), "\n", "例如：", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
          children: "Color['bricks red']"
        }), " 會回傳 ", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.code, {
          children: "\"#B82C30\""
        }), "。"]
      }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.p, {
        children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div", {
          className: "tip",
          children: "小提示"
        }), "點擊顏色區塊可以複製顏色的程式碼。"]
      }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div", {
        className: "subheading",
        children: "Primary 主要色系"
      }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div", {
        className: "my-list",
        children: _components_Color_json__WEBPACK_IMPORTED_MODULE_2__.reds.map(name => {
          // compute the greyscale value of Color[name]
          const grey = parseInt(_components_Color_json__WEBPACK_IMPORTED_MODULE_2__[name].slice(1, 3), 16) * 0.299 + parseInt(_components_Color_json__WEBPACK_IMPORTED_MODULE_2__[name].slice(3, 5), 16) * 0.587 + parseInt(_components_Color_json__WEBPACK_IMPORTED_MODULE_2__[name].slice(5, 7), 16) * 0.114;
          // if the greyscale value is less than 150, use white text, otherwise use black text
          const darkonhover = grey < 150 ? "darkonhover" : "";
          // Generate a block with a square with background: Color[name], and text: name
          return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.div, {
            className: "my-item",
            onClick: e => {
              navigator.clipboard.writeText(`Color["${name}"]`).then(() => {
                alert("successfully copied");
              }).catch(() => {
                alert("something went wrong");
              });
            },
            onMouseOver: e => {
              e.currentTarget.style.backgroundColor = _components_Color_json__WEBPACK_IMPORTED_MODULE_2__[name];
            },
            onMouseOut: e => {
              e.currentTarget.style.backgroundColor = 'white';
            },
            children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.div, {
              className: "color-box",
              style: {
                background: _components_Color_json__WEBPACK_IMPORTED_MODULE_2__[name]
              }
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.span, {
              children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {
                className: darkonhover,
                children: name.toUpperCase()
              }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {
                className: darkonhover,
                children: _components_Color_json__WEBPACK_IMPORTED_MODULE_2__[name]
              })]
            })]
          }, name);
        })
      }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div", {
        className: "subheading",
        children: "Grey Scale 灰階"
      }), "\n", (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)("div", {
        className: "my-list",
        children: _components_Color_json__WEBPACK_IMPORTED_MODULE_2__.grey_scale.map(name => {
          // compute the greyscale value of Color[name]
          const grey = parseInt(_components_Color_json__WEBPACK_IMPORTED_MODULE_2__[name].slice(1, 3), 16) * 0.299 + parseInt(_components_Color_json__WEBPACK_IMPORTED_MODULE_2__[name].slice(3, 5), 16) * 0.587 + parseInt(_components_Color_json__WEBPACK_IMPORTED_MODULE_2__[name].slice(5, 7), 16) * 0.114;
          // if the greyscale value is less than 150, use white text, otherwise use black text
          const darkonhover = grey < 150 ? "darkonhover" : "";
          // Generate a block with a square with background: Color[name], and text: name
          return (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.div, {
            className: "my-item",
            onClick: e => {
              navigator.clipboard.writeText(`Color["${name}"]`).then(() => {
                alert("successfully copied");
              }).catch(() => {
                alert("something went wrong");
              });
            },
            onMouseOver: e => {
              e.currentTarget.style.backgroundColor = _components_Color_json__WEBPACK_IMPORTED_MODULE_2__[name];
            },
            onMouseOut: e => {
              e.currentTarget.style.backgroundColor = 'white';
            },
            children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.div, {
              className: "color-box",
              style: {
                background: _components_Color_json__WEBPACK_IMPORTED_MODULE_2__[name]
              }
            }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsxs)(_components.span, {
              children: [(0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.strong, {
                className: darkonhover,
                children: name.toUpperCase()
              }), (0,react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__.jsx)(_components.p, {
                className: darkonhover,
                children: _components_Color_json__WEBPACK_IMPORTED_MODULE_2__[name]
              })]
            })]
          }, name);
        })
      })]
    });
  }
}
/* harmony default export */ __webpack_exports__["default"] = (MDXContent);


/***/ })

});
//# sourceMappingURL=stories-general-Color-mdx.cf991d605e5705497de6.hot-update.js.map