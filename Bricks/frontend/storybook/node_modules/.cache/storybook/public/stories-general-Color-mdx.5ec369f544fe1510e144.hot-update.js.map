{"version":3,"file":"stories-general-Color-mdx.5ec369f544fe1510e144.hot-update.js","mappingssources":["webpack://storybook/./src/stories/general/Color.mdx"],"sourcesContent":["\nimport React from 'react';\n\n/*@jsxRuntime automatic @jsxImportSource react*/\n// Repeat generatnig a block for each color in the reds array\n// Generate a block with a square with background: Color[name], and text: name\nimport {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from \"react/jsx-runtime\";\nimport {useMDXComponents as _provideComponents} from \"@storybook/addon-essentials/docs/mdx-react-shim\";\nimport {Meta} from '@storybook/blocks';\nimport Color from '../../components/Color.json';\nconst MDXLayout = function MyColors() {\n  const _components = Object.assign({\n    div: \"div\",\n    style: \"style\",\n    h1: \"h1\",\n    img: \"img\",\n    span: \"span\",\n    strong: \"strong\",\n    p: \"p\"\n  }, _provideComponents());\n  let primary = \"bricks red\";\n  let reds = [\"red200\", \"red300\", \"red400\", \"red500\", \"bricks red\", \"red700\", \"red800\", \"red900\", \"red1000\"];\n  let grey_scale = [\"black\", \"dark grey\", \"deep grey\", \"mid grey\", \"normal grey\", \"soft grey\", \"light grey\", \"white\"];\n  return _jsxs(_components.div, {\n    children: [_jsx(_components.style, {\n      children: `\n  .subheading {\n      --mediumdark: '#999999';\n      font-weight: 700;\n      font-size: 15px;\n      color: #999;\n      letter-spacing: 6px;\n      line-height: 24px;\n      text-transform: capitalize;\n      margin-bottom: 12px;\n      margin-top: 40px;\n    }\n\n    .my-list {\n      display: grid;\n      grid-template-columns: repeat(auto-fit, minmax(calc((100% - 30px) / 200px), 1fr));\n      grid-template-rows: 1fr 1fr;\n      row-gap: 15px;\n      column-gap: 15px;\n      grid-template-columns: 1fr 1fr;\n    }\n\n    @media all and (-ms-high-contrast:none) {\n    .my-list {\n        display: -ms-grid;\n        -ms-grid-columns: 1fr 1fr;\n        -ms-grid-rows: 1fr 1fr;\n      }\n    }\n\n    .my-item {\n      display: block;\n      padding: 20px;\n      border: 1px solid #00000010;\n      border-radius: 5px;\n      transition: background 150ms ease-out, border 150ms ease-out, transform 150ms ease-out;\n      color: #333333;\n      display: flex;\n      align-items: flex-start;\n    }\n\n    .my-item:hover {\n      border-color: #1EA7FD50;\n      transform: translate3d(0, -3px, 0);\n      box-shadow: rgba(0, 0, 0, 0.08) 0 3px 10px 0;\n    }\n\n    .my-item:active {\n      border-color: #1EA7FD;\n      transform: translate3d(0, 0, 0);\n    }\n\n    .my-item strong {\n      font-weight: 700;\n      display: block;\n      margin-bottom: 2px;\n    }\n\n    .my-item img {\n      height: 40px;\n      width: 40px;\n      margin-right: 15px;\n      flex: none;\n    }\n\n    .my-item span,\n    .my-item p {\n      margin: 0;\n      font-size: 14px;\n      line-height: 20px;\n    }\n`\n    }), _jsx(_components.h1, {\n      children: \" Colors 色彩\"\n    }), _jsx(_components.div, {\n      className: \"subheading\",\n      children: \"Primary Colors 主要色系\"\n    }), _jsx(_components.div, {\n      className: \"my-list\",\n      children: reds.map(name => _jsxs(_components.div, {\n        className: \"my-item\",\n        children: [_jsx(_components.img, {\n          src: Plugin,\n          alt: \"plugin\"\n        }), _jsxs(_components.span, {\n          children: [_jsx(_components.strong, {\n            children: name.toUpperCase()\n          }), _jsx(_components.p, {\n            children: Color[name]\n          })]\n        })]\n      }, name))\n    }), _jsx(_components.div, {\n      className: \"subheading\",\n      children: \"Grey Scale 灰階\"\n    })]\n  });\n};\nfunction MDXContent(props = {}) {\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, {})\n  })) : _createMdxContent();\n  function _createMdxContent() {\n    const _components = Object.assign({\n      p: \"p\",\n      code: \"code\"\n    }, _provideComponents(), props.components);\n    return _jsxs(_Fragment, {\n      children: [_jsx(_components.p, {\n        children: _jsx(_components.code, {\n          children: \"src/stories/general/Color.mdx\"\n        })\n      }), \"\\n\", \"\\n\", _jsx(Meta, {\n        title: \"General 通用/Colors 色彩\"\n      })]\n    });\n  }\n}\nexport default MDXContent;\n"],"names":[],"sourceRoot":""}